import torch
import os
from datasets.imagelist_dataset import ImageList
import random

Imagenet_D_classes = ['aircraft carrier', 'ambulance', 'ant', 'backpack', 'banana', 'barn', 'shopping basket', 'basketball', 'bathtub', 'couch', 'bee', 'seat belt', 'park bench', 'binoculars', 'bottle cap', 'bow tie', 'broccoli', 'broom', 'bucket', 'arabian camel', 'candle', 'cannon', 'canoe', 'castle', 'cello', 'church', 'magnetic compass', 'Nile crocodile', 'dishwasher', 'sliding door', 'Komodo dragon', 'power drill', 'platypus', 'dumbbell', 'corn cob', 'envelope', 'eraser', 'electric fan', 'feather boa', 'flamingo', 'frying pan', 'hammer', 'cowboy hat', 'porcupine', 'hockey puck', 'balloon', 'hourglass', 'wallaby', 'knee pad', 'letter opener', 'carved pumpkin', 'lighter', 'lighthouse', 'lipstick', 'mailbox', 'microphone', 'microwave oven', 'mushroom', 'metal nail', 'necklace', 'ocean liner', 'Dutch oven', 'great grey owl', 'paintbrush', 'parachute', 'king penguin', 'pillow', 'pineapple', 'pizza', 'purse', 'remote control', 'chainsaw', 'saxophone', 'scorpion', 'screwdriver', 'bighorn sheep', 'shovel', 'sleeping bag', 'snail', 'snorkel', 'soccer ball', 'sock', 'motorboat', 'wooden spoon', 'fox squirrel', 'stethoscope', 'traffic or street sign', 'stove', 'strawberry', 'submarine', 'swing', 'syringe', 'T-shirt', 'teapot', 'teddy bear', 'television', 'tent', 'tiger', 'toaster', 'tractor', 'traffic light', 'high-speed train', 'trombone', 'cornet', 'umbrella', 'vase', 'violin', 'washing machine', 'zebra']

template = ['a bad photo of a {}.',
    'a photo of many {}.',
    'a sculpture of a {}.',
    'a photo of the hard to see {}.',
    'a low resolution photo of the {}.',
    'a rendering of a {}.',
    'graffiti of a {}.',
    'a bad photo of the {}.',
    'a cropped photo of the {}.',
    'a tattoo of a {}.',
    'the embroidered {}.',
    'a photo of a hard to see {}.',
    'a bright photo of a {}.',
    'a photo of a clean {}.',
    'a photo of a dirty {}.',
    'a dark photo of the {}.',
    'a drawing of a {}.',
    'a photo of my {}.',
    'the plastic {}.',
    'a photo of the cool {}.',
    'a close-up photo of a {}.',
    'a black and white photo of the {}.',
    'a painting of the {}.',
    'a painting of a {}.',
    'a pixelated photo of the {}.',
    'a sculpture of the {}.',
    'a bright photo of the {}.',
    'a cropped photo of a {}.',
    'a plastic {}.',
    'a photo of the dirty {}.',
    'a jpeg corrupted photo of a {}.',
    'a blurry photo of the {}.',
    'a photo of the {}.',
    'a good photo of the {}.',
    'a rendering of the {}.',
    'a {} in a video game.',
    'a photo of one {}.',
    'a doodle of a {}.',
    'a close-up photo of the {}.',
    'a photo of a {}.',
    'the origami {}.',
    'the {} in a video game.',
    'a sketch of a {}.',
    'a doodle of the {}.',
    'a origami {}.',
    'a low resolution photo of a {}.',
    'the toy {}.',
    'a rendition of the {}.',
    'a photo of the clean {}.',
    'a photo of a large {}.',
    'a rendition of a {}.',
    'a photo of a nice {}.',
    'a photo of a weird {}.',
    'a blurry photo of a {}.',
    'a cartoon {}.',
    'art of a {}.',
    'a sketch of the {}.',
    'a embroidered {}.',
    'a pixelated photo of a {}.',
    'itap of the {}.',
    'a jpeg corrupted photo of the {}.',
    'a good photo of a {}.',
    'a plushie {}.',
    'a photo of the nice {}.',
    'a photo of the small {}.',
    'a photo of the weird {}.',
    'the cartoon {}.',
    'art of the {}.',
    'a drawing of the {}.',
    'a photo of the large {}.',
    'a black and white photo of a {}.',
    'the plushie {}.',
    'a dark photo of a {}.',
    'itap of a {}.',
    'graffiti of the {}.',
    'a toy {}.',
    'itap of my {}.',
    'a photo of a cool {}.',
    'a photo of a small {}.',
    'a tattoo of the {}.']

def build_imagenet_d(data_root, domain_id, transform):
    data_files = [os.path.join("datasets", "imagenet_d109_lists", domain_id + "_list.txt")]
    data_dir = os.path.join(data_root,'imagenet-d')
    testset = ImageList(image_root=data_dir,
                        label_files=data_files,
                        transform=transform)
    random.shuffle(testset.samples)
    return testset, Imagenet_D_classes, template